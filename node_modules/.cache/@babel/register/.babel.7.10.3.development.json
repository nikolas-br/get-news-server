{
  "{\"sourceRoot\":\"/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Nikolas 1/Downloads/JavaScript/got-news-server\",\"filename\":\"/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Nikolas 1/Downloads/JavaScript/got-news-server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server",
      "filename": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _rssToJson = _interopRequireDefault(require(\"rss-to-json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar port = process.env.PORT || 80;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.listen(port);\nconsole.log(\"Listening on port \" + port);\napp.post(\"/get\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Post request for: \", req.body.data);\n\n            if (!(typeof req.body.data === \"undefined\")) {\n              _context.next = 4;\n              break;\n            }\n\n            res.send(\"Not allowed\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (Array.isArray(req.body.data)) {\n              _context.next = 7;\n              break;\n            }\n\n            res.send(\"Not allowed\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            if (!(req.body.data.filter(function (element) {\n              return element.length === 0;\n            }).length > 0)) {\n              _context.next = 10;\n              break;\n            }\n\n            res.send(\"Not allowed\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            getFeeds(req.body.data).then(function (feeds) {\n              var consolidatedFeed = [];\n              feeds.forEach(function (feed) {\n                return consolidatedFeed = [].concat(_toConsumableArray(consolidatedFeed), _toConsumableArray(feed));\n              });\n              sortFeed(consolidatedFeed);\n              console.log(\"Entries retrieved: \", consolidatedFeed.length);\n              res.send(consolidatedFeed);\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post(\"/getStory\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"/getStory request for: \", req.body.data);\n\n            if (!(typeof req.body.data === \"undefined\")) {\n              _context2.next = 4;\n              break;\n            }\n\n            res.send(\"Not allowed\");\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            if (req.body.link) {\n              res.send(\"OK!\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //////////////////////////////////////////////////////////////////////\n\nvar getFeeds = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(feeds) {\n    var promises, _iterator, _step, feedObj;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            promises = [];\n            _iterator = _createForOfIteratorHelper(feeds);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                feedObj = _step.value;\n                promises.push(getFeed(feedObj));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return _context3.abrupt(\"return\", Promise.all(promises));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getFeeds(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getFeed = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(feedObj) {\n    var promise;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            promise = new Promise(function (resolve, reject) {\n              _rssToJson[\"default\"].load(feedObj.link, function (error, json) {\n                if (error != null) {\n                  console.error(\"Error getting feed: \", feedObj.link);\n                  resolve([]);\n                } else resolve(parseFeed(json, feedObj));\n              });\n            });\n            return _context4.abrupt(\"return\", promise);\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getFeed(_x6) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar parseFeed = function parseFeed(jsonFeed, feedObj) {\n  var newEntries = [];\n  var itemKeys = [\"title\", \"description\", \"link\", \"pubDate\", \"category\"];\n\n  if (\"items\" in jsonFeed) {\n    var _iterator2 = _createForOfIteratorHelper(jsonFeed[\"items\"]),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n        var newEntry = {};\n\n        var _iterator3 = _createForOfIteratorHelper(itemKeys),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var itmKey = _step3.value;\n            if (typeof item[itmKey] === \"undefined\") newEntry = _objectSpread(_objectSpread({}, newEntry), {}, _defineProperty({}, itmKey, \"\"));else newEntry = _objectSpread(_objectSpread({}, newEntry), {}, _defineProperty({}, itmKey, item[itmKey]));\n          } //Filter out description of items if they contain meta data\n\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (newEntry.description.includes(\"<\")) newEntry.description = \"\"; //Change date to more readable format\n\n        var date = new Date(newEntry.pubDate);\n        newEntry.pubDate = date.toLocaleString(\"en-US\", {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }); //Add new item to array of stories, add values for app functions\n\n        newEntries = [].concat(_toConsumableArray(newEntries), [_objectSpread(_objectSpread({}, newEntry), {}, {\n          isFavorite: false,\n          avatarThumbnail: feedObj.avatarThumbnail,\n          avatarText: feedObj.avatarText,\n          rootTitle: jsonFeed[\"title\"],\n          rootLink: feedObj.link,\n          isRead: false\n        })]);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return newEntries;\n};\n\nvar sortFeed = function sortFeed(feed) {\n  feed.sort(function (a, b) {\n    return Date.parse(a.pubDate) < Date.parse(b.pubDate) ? 1 : -1;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "use",
        "express",
        "json",
        "listen",
        "console",
        "log",
        "post",
        "req",
        "res",
        "body",
        "data",
        "send",
        "Array",
        "isArray",
        "filter",
        "element",
        "length",
        "getFeeds",
        "then",
        "feeds",
        "consolidatedFeed",
        "forEach",
        "feed",
        "sortFeed",
        "link",
        "promises",
        "feedObj",
        "push",
        "getFeed",
        "Promise",
        "all",
        "promise",
        "resolve",
        "reject",
        "Feed",
        "load",
        "error",
        "parseFeed",
        "jsonFeed",
        "newEntries",
        "itemKeys",
        "item",
        "newEntry",
        "itmKey",
        "description",
        "includes",
        "date",
        "Date",
        "pubDate",
        "toLocaleString",
        "weekday",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "isFavorite",
        "avatarThumbnail",
        "avatarText",
        "rootTitle",
        "rootLink",
        "isRead",
        "sort",
        "a",
        "b",
        "parse"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Nikolas 1/Downloads/JavaScript/got-news-server/src/",
      "sourcesContent": [
        "import \"dotenv/config\"; // alwas has to be declared first\nimport express from \"express\";\nimport cors from \"cors\";\nimport Feed from \"rss-to-json\";\n\nlet port = process.env.PORT || 80;\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\napp.listen(port);\nconsole.log(\"Listening on port \" + port);\n\napp.post(\"/get\", async (req, res) => {\n  console.log(\"Post request for: \", req.body.data);\n  if (typeof req.body.data === \"undefined\") {\n    res.send(\"Not allowed\");\n    return;\n  }\n  if (!Array.isArray(req.body.data)) {\n    res.send(\"Not allowed\");\n    return;\n  }\n  if (req.body.data.filter((element) => element.length === 0).length > 0) {\n    res.send(\"Not allowed\");\n    return;\n  }\n\n  getFeeds(req.body.data).then((feeds) => {\n    let consolidatedFeed = [];\n    feeds.forEach(\n      (feed) => (consolidatedFeed = [...consolidatedFeed, ...feed])\n    );\n    sortFeed(consolidatedFeed);\n    console.log(\"Entries retrieved: \", consolidatedFeed.length);\n\n    res.send(consolidatedFeed);\n  });\n});\n\napp.post(\"/getStory\", async (req, res) => {\n  console.log(\"/getStory request for: \", req.body.data);\n  if (typeof req.body.data === \"undefined\") {\n    res.send(\"Not allowed\");\n    return;\n  }\n  if (req.body.link) {\n    res.send(\"OK!\");\n  }\n});\n\n//////////////////////////////////////////////////////////////////////\n\nconst getFeeds = async (feeds) => {\n  let promises = [];\n\n  for (let feedObj of feeds) promises.push(getFeed(feedObj));\n\n  return Promise.all(promises);\n};\n\nconst getFeed = async (feedObj) => {\n  let promise = new Promise((resolve, reject) => {\n    Feed.load(feedObj.link, (error, json) => {\n      if (error != null) {\n        console.error(\"Error getting feed: \", feedObj.link);\n        resolve([]);\n      } else resolve(parseFeed(json, feedObj));\n    });\n  });\n\n  return promise;\n};\n\nconst parseFeed = (jsonFeed, feedObj) => {\n  let newEntries = [];\n\n  const itemKeys = [\"title\", \"description\", \"link\", \"pubDate\", \"category\"];\n\n  if (\"items\" in jsonFeed) {\n    for (let item of jsonFeed[\"items\"]) {\n      let newEntry = {};\n\n      for (let itmKey of itemKeys) {\n        if (typeof item[itmKey] === \"undefined\")\n          newEntry = { ...newEntry, [itmKey]: \"\" };\n        else newEntry = { ...newEntry, [itmKey]: item[itmKey] };\n      }\n\n      //Filter out description of items if they contain meta data\n      if (newEntry.description.includes(\"<\")) newEntry.description = \"\";\n      //Change date to more readable format\n      const date = new Date(newEntry.pubDate);\n      newEntry.pubDate = date.toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n\n      //Add new item to array of stories, add values for app functions\n      newEntries = [\n        ...newEntries,\n        {\n          ...newEntry,\n          isFavorite: false,\n          avatarThumbnail: feedObj.avatarThumbnail,\n          avatarText: feedObj.avatarText,\n          rootTitle: jsonFeed[\"title\"],\n          rootLink: feedObj.link,\n          isRead: false,\n        },\n      ];\n    }\n  }\n\n  return newEntries;\n};\n\nconst sortFeed = (feed) => {\n  feed.sort((a, b) => (Date.parse(a.pubDate) < Date.parse(b.pubDate) ? 1 : -1));\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593199211610
  }
}